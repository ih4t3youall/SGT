<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<http auto-config="true">
	<csrf disabled="true" />
<!-- 		<intercept-url pattern="/*" access="ROLE_USER" /> -->
<!-- 		<intercept-url pattern="/welcome.htm" access="ROLE_USER" /> -->

<intercept-url pattern="/pantallaEmpleado.htm" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/loginEmpleado.htm" access="hasRole('ROLE_ANONYMOUS')" />
<!-- 		<intercept-url pattern="/loginEmpleado.htm" access="ROLE_USER" /> -->
		
		<intercept-url pattern="/loginFailEmpleado.htm" access="hasRole('ROLE_ANONYMOUS')" />
		<intercept-url pattern="turnoAceptado.htm" access="hasRole('ROLE_ANONYMOUS')" />
		
		<form-login login-page="/loginEmpleado.htm" default-target-url="/welcome.htm"
			authentication-failure-url="/loginFailEmpleado.htm" 
			/>
		<logout logout-success-url="/loginEmpleado.htm" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
			
					  users-by-username-query=
		    "select username,password,1 as enabled from USER_EMPLEADO where username=?"
				
		  authorities-by-username-query=
		    "select username, role from user_roles where username =?  "
/>

<!-- 					select username,password, enabled  -->
<!-- 					from users where USERNAME=?" -->

					
				
<!-- 				authorities-by-username-query=" -->
<!-- 					select u.username, ur.authority from users u, user_roles ur  -->
<!-- 					where u.user_id = ur.user_id and u.username =?"  -->
					
		
		</authentication-provider>
	</authentication-manager>

</beans:beans>